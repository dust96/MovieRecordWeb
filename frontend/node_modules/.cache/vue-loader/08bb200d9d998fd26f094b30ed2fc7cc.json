{"remainingRequest":"/Users/yejin/Desktop/MovieRecordWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yejin/Desktop/MovieRecordWeb/src/components/Calendar/DateDiv.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/yejin/Desktop/MovieRecordWeb/src/components/Calendar/DateDiv.vue","mtime":1647761065389},{"path":"/Users/yejin/Desktop/MovieRecordWeb/node_modules/css-loader/dist/cjs.js","mtime":1645163206715},{"path":"/Users/yejin/Desktop/MovieRecordWeb/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1645163206956},{"path":"/Users/yejin/Desktop/MovieRecordWeb/node_modules/postcss-loader/src/index.js","mtime":1645163206783},{"path":"/Users/yejin/Desktop/MovieRecordWeb/node_modules/cache-loader/dist/cjs.js","mtime":1645163206545},{"path":"/Users/yejin/Desktop/MovieRecordWeb/node_modules/vue-loader/lib/index.js","mtime":1645163206858}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoud2Vlay1ncmlkewogIHdpZHRoOjEwMCU7CiAgaGVpZ2h0OjkwJTsKICBkaXNwbGF5OiBncmlkOwogIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDFmciAxZnIgMWZyIDFmciAxZnI7Cn0gICAKCg=="},{"version":3,"sources":["DateDiv.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA;AACA;AACA;AACA","file":"DateDiv.vue","sourceRoot":"src/components/Calendar","sourcesContent":["\n<template>\n  <div class=\"week-grid\">\n    <WeekDiv v-for=\"(week,i) in dates\" :key=\"i\" v-bind:weekdata=\"week\"></WeekDiv>\n  </div>\n</template>\n\n<script>\n  import WeekDiv from \"./WeekDiv.vue\";\n\n  export default {\n    name: \"DateDiv\",\n    components: {\n        WeekDiv\n    },\n    props:[\n      'currentyearmonth'\n    ],\n    data(){\n      return {\n        dates:[],\n        currentYear : 0,\n        currentMonth: 0,\n        year: 0,\n        month: 0\n      }\n    },\n    created(){\n\n      this.year = this.currentyearmonth.currentYear;\n      this.month = this.currentyearmonth.currentMonth;\n      this.getCalendarDate();\n    },\n    updated(){\n      this.year = this.currentyearmonth.currentYear;\n      this.month = this.currentyearmonth.currentMonth;\n\n    },\n    methods: {\n      getCalendarDate(){\n        const [firstDay, lastDate, prevLastDate] = this.getFirstDayLastDate(this.year, this.month);\n        this.dates = this.getMonthDates(firstDay, lastDate, prevLastDate);\n      },\n      getFirstDayLastDate(year, month){\n        const firstDay = new Date(year, month - 1, 1).getDay();\n        const lastDate = new Date(year, month , 0).getDate();\n        let lastYear = year;\n        let lastMonth = month - 1;\n        if(month === 1){\n          lastMonth = 12;\n          lastYear -= 1;\n        }\n        const prevLastDate = new Date(lastYear, lastMonth, 0).getDate();\n        return [firstDay, lastDate, prevLastDate];\n      },\n      getMonthDates(firstDay, lastDate, prevLastDate){\n        \n        let datearr = [];\n        let date = 1;\n        let weekarr = [];\n        let prevLastStartDate = prevLastDate - firstDay  + 1;\n        while(date <=lastDate){\n          if(date === 1){\n            for(var day = 0;day<firstDay;day++){\n              let date_data = {};\n              let value_name = String(this.year) + this.$parent.formatMonthDate(this.month-1) + this.$parent.formatMonthDate(prevLastStartDate + day);\n              date_data['date'] = prevLastStartDate + day;\n              date_data['yearmonthdate'] = value_name;\n              date_data['transparency'] = true;\n              date_data['weekend'] = this.$parent.checkWeekend(this.year,this.month,prevLastStartDate + day);\n              weekarr.push(date_data);\n            }\n          }\n\n          let date_data = {};\n          let value_name = String(this.year) + this.$parent.formatMonthDate(this.month) + this.$parent.formatMonthDate(date);\n          date_data['date'] = date;\n          date_data['yearmonthdate'] = value_name;\n          date_data['transparency'] = false;\n          date_data['weekend'] = this.$parent.checkWeekend(this.year,this.month,date);\n          weekarr.push(date_data);\n          if(weekarr.length == 7){\n            datearr.push(weekarr);\n            weekarr = [];\n          }\n          date++;\n        }\n        const len = weekarr.length;\n\n        if(len>0 && len <7){\n          for(let i = 1;i<=7-len;i++){\n            let date_data = {};\n            let value_name = String(this.year) + this.$parent.formatMonthDate(this.month+1) + this.$parent.formatMonthDate(i);\n            date_data['date'] = i;\n            date_data['yearmonthdate'] = value_name;\n            date_data['transparency'] = true;\n            date_data['weekend'] = this.$parent.checkWeekend(this.year,this.month+1,i);\n            weekarr.push(date_data);\n          }\n        }\n\n        if(weekarr.length>0){\n          datearr.push(weekarr);\n        }\n        return datearr;\n      },\n      \n    }\n  }\n   \n</script>\n\n<style>\n  .week-grid{\n    width:100%;\n    height:90%;\n    display: grid;\n    grid-template-rows: 1fr 1fr 1fr 1fr 1fr 1fr;\n  }   \n\n</style>"]}]}